# -*- coding: utf-8 -*-
"""DPSExp4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hvCrZMhhLVdFjAuw0TR9lHmFB4kCLr-I
"""

!pip install pycryptodome
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64

# Function to generate RSA Key Pair
def generate_keys():
    key = RSA.generate(2048)  # Generate a 2048-bit RSA key pair
    private_key = key.export_key()  # Export the private key
    public_key = key.publickey().export_key()  # Export the public key

    # Save keys to files
    with open("private.pem", "wb") as priv_file:
        priv_file.write(private_key)

    with open("public.pem", "wb") as pub_file:
        pub_file.write(public_key)

    print("RSA Key Pair Generated and Saved Successfully.")

# Function to encrypt a message using RSA Public Key
def encrypt_message(message, public_key_path):
    with open(public_key_path, "rb") as pub_file:
        public_key = RSA.import_key(pub_file.read())  # Load the public key

    cipher = PKCS1_OAEP.new(public_key)  # Create a cipher object
    encrypted_message = cipher.encrypt(message.encode())  # Encrypt the message
    return base64.b64encode(encrypted_message).decode()  # Encode in base64

# Function to decrypt a message using RSA Private Key
def decrypt_message(encrypted_message, private_key_path):
    with open(private_key_path, "rb") as priv_file:
        private_key = RSA.import_key(priv_file.read())  # Load the private key

    cipher = PKCS1_OAEP.new(private_key)  # Create a cipher object
    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))  # Decrypt message
    return decrypted_message.decode()  # Convert bytes to string

# Main Execution
if __name__ == "__main__":
    # Step 1: Generate RSA Key Pair
    generate_keys()

    # Step 2: Encrypt a message
    message = "Hello, RSA Secure Communication!"
    encrypted = encrypt_message(message, "public.pem")
    print(f"Encrypted Message: {encrypted}")

    # Step 3: Decrypt the message
    decrypted = decrypt_message(encrypted, "private.pem")
    print(f"Decrypted Message: {decrypted}")

